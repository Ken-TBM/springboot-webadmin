Web原生组件注入（Servlet、Filter、listener）
1、使用Servlet API
@ServletComponentScan(basePackages = "com.kenproject.admin");指定原生Servlet组件都放在哪里
@WebServlet(urlPatterns = "/my");效果:直接响应，没有Spring的拦截器
@WebFilter(urlPatterns = {"/css/*","/images/*"})
@WebListener

推荐可以使用这种方式：

扩展：DispatcherServlet如何注册进来的
    .容器中自动配置了DispatcherServlet属性绑定到WebMvcProperties；对应的配置文件配置项是spring.mvc
    .通过ServletRegistrationBean<DispatcherServlet>把DispatcherServlet配置进来
    .默认映射的路径/路径

    Tomcat-Servlet
    多个Servlet都能处理到同一层路径，精确优先原则
    A /my
    B /my/


2.使用RegistrationBean
ServletRegistrationBean，FilterRegistrationBean，and ServletListenerRegistrationBean

3、嵌入式Servlet容器
默认支持的webServer
    tomcat,Jetty,or Undertow
    ServletWebServerApplicationContext 容器启动寻找ServletWebServletFactory 并引导创建服务器
切换服务器
原理
    springBoot应用启动发现当前是web应用，web场景包-导入tomcat
    web应用会创建一个web版的ioc容器 ServletWebServerApplicationContext
    ServletWebServerApplicationContext启动的时候寻找ServletWebServerFactory（Servlet web服务器工厂---->
    Servlet的web服务器）
    SpringBoot底层默认支持很多的WebServer工厂；
    TomcatServletWebServerFactory，JettyServletFactory,or UndertowServletFactory
    底层直接会有一个自动配置类。ServletWebServerFactoryAutoConfiguration
    ServletWebServerFactoryAutoConfiguration导入了ServletWebServerFactoryConfiguration（配置类）
    ServletWebServerFactoryConfiguration配置类 根据动态判断系统到低导入哪个配置类（默认导入web-starter导入tomcat）
    容器中有TomcatServletWebServerFactory
    TomcatServletWebServerFactory创建出Tomcat服务器并启动；TomcatWebServer的构造器拥有初始化方法
    Initialize---this.tomcat.start()
    内嵌服务器，就是手动把服务器的代码调用（tomcat核心jar包存在）
    直接自定义ConfigurableServletWebServerFactory
    修改自定义文件Server.XXX
    自定义 ConfigurableServletWebServerFactory

    2、定制Servlet容器
    实现WebServerFactoryCustomizer<ConfigurableServletFactory>
        把配置文件的值和ServletWebServletFactory进行绑定
    修改配置文件 server.XXX
    直接自定义ConfigurableServletWebServerFactory

    xxx